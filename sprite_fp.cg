////////////////////////////////////////////////////////////////////
//
// $Id: $
//
// fragment program to compute Q_hat
//
// Copyright (c) 2005 by Takashi Kanai. All rights reserved. 
//
////////////////////////////////////////////////////////////////////

#include "mydefine.h"

void main( in float4 hpos : POSITION,      // pixel position (but it can not be used ...)
// 	   in float4 color0 : COLOR0,
   	   in float4 texCoord : TEXCOORD0, // from point sprite
	   in float4 ppos : TEXCOORD1, // from point sprite
	   in float4 asize : TEXCOORD2, // from point sprite
 	   uniform float4x4 ModelViewProjInv,
// 	   in float psize : PSIZE,
	   
	   out float4 color : COLOR
	   )
{
//   color = float4 (1.0f, .0f, .0f, 1.0f );
//   if ( (texCoord.x == .0f) || (texCoord.x == 1.0f) || (texCoord.y == .0f) || (texCoord.y == 1.0f) )
//     color = float4( .0f, .0f, .0f, .0f );
//   else
  float4 qn = float4( 2.0f * ( texCoord.x - .5f ) * asize.x + ppos.x,
		      -2.0f * ( texCoord.y - .5f ) * asize.x + ppos.y,
		      ppos.z, 
		      ppos.w );
//   qn.x /= qn.w;
//   qn.y /= qn.w;
//   qn.z /= qn.w;
//   float4 qo = mul( ModelViewProjInv, qn );
  color = texCoord;
  
//   color = float4( qn.x, qn.y, qn.z, 1.0f );
//      color = ( qn.x / qn.w, qn.y / qn.w, qn.z / qn.w, 1.0f );
//   color = qo;
//   color = asize;
}
